{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 .SFNSDisplay;\f2\froman\fcharset0 Times-Roman;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red33\green153\blue218;\red0\green0\blue0;\red151\green0\blue126;
\red208\green208\blue208;\red73\green17\blue135;\red181\green0\blue19;}
{\*\expandedcolortbl;;\cssrgb\c13333\c66667\c88235;\cssrgb\c0\c0\c0;\cssrgb\c66667\c5098\c56863;
\cssrgb\c85098\c85098\c85098;\cssrgb\c36078\c14902\c60000;\cssrgb\c76863\c10196\c8627;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
\pard\pardeftab720\sl820\sa240\partightenfactor0

\f1\fs69\fsmilli34667 \cf2 \expnd0\expndtw0\kerning0
Auto-updating results 
\f2\fs24 \cf3 \
\pard\pardeftab720\sl360\sa240\partightenfactor0

\fs32 \cf3 A database query defines a collection of objects. At the most basic level, \
RxRealm wraps 
\f3\fs26\fsmilli13333 Results 
\f2\fs32 as an observable which fires once with initial contents, then again every time the collection changes: 
\fs24 \
\pard\pardeftab720\sl300\partightenfactor0

\f3\fs26\fsmilli13333 \cf4 \cb5 let \cf3 realm = \cf4 try\cf3 ! \cf6 Realm\cf3 ()\
\cf4 let \cf3 result = realm.objects(\cf6 MyObject\cf3 .\cf4 self\cf3 )\
\pard\pardeftab720\sl300\partightenfactor0
\cf6 Observable\cf3 .collection(from: result)\
  .subscribe(onNext: \{ items \cf4 in\
\cf6     print\cf3 (\cf7 "Query returned \cf3 \\(items.\cf6 count\cf3 ) \cf7 items"\cf3 )\
  \})\
  .disposed(by: disposeBag)\
\
\pard\pardeftab720\sl360\sa240\partightenfactor0

\f2\fs32 \cf3 \cb1 Every time you commit a change to the database that could affect 
\f3\fs26\fsmilli13333 results
\f2\fs32 , the collection fires again 
\fs24 \
\pard\pardeftab720\sl820\sa240\partightenfactor0

\f1\fs69\fsmilli34667 \cf2 Arrays 
\f2\fs24 \cf3 \
\pard\pardeftab720\sl360\sa240\partightenfactor0

\fs32 \cf3 Getting an array instead of a Realm 
\f3\fs26\fsmilli13333 Results 
\f2\fs32 collection is easy: 
\fs24 \
\pard\pardeftab720\sl300\partightenfactor0

\f3\fs26\fsmilli13333 \cf4 \cb5 let \cf3 result = realm.objects(\cf6 MyObject\cf3 .\cf4 self\cf3 )\
\pard\pardeftab720\sl300\partightenfactor0
\cf6 Observable\cf3 .array(from: result)\
  .subscribe(onNext: \{ array \cf4 in\
\cf6     print\cf3 (\cf7 "Query returned \cf3 \\(array.\cf6 count\cf3 ) \cf7 items"\cf3 )\
  \})\
  .disposed(by: disposeBag)\
}